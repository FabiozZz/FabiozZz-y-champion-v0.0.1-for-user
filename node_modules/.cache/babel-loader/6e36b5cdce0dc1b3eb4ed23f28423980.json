{"ast":null,"code":"var _jsxFileName = \"/home/fabiozzz/www/react/y-champion/for-user/src/compponents/auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Input } from \"../../utils/input/Input\";\nimport './auth.css';\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport api from '../../exampleApi/APIJWT';\nimport { userLogIn } from \"../../actions/userActions\";\nimport { toast, Toaster } from \"react-hot-toast\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch(); //данные пользователя для входа в систему\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); //переключатель загрузки страницы\n\n  const [isLoading, setIsLoading] = useState(false); //вызывается каждый раз при обновлении isLoading и смотрит показывать индикатор или нет\n\n  useEffect(() => {\n    if (isLoading) {\n      toast.loading('loading');\n    } else {\n      toast.remove();\n    }\n  }, [isLoading]); //прослушивает кнопку отправки формы,\n  //устанавливает и снимает индикатор загрузки,\n  // получает пользователя и диспатчит в редакс\n\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    const res = await api.login({\n      email,\n      password\n    });\n\n    if (res.data.user) {\n      setIsLoading(false);\n      toast.success('Success', {\n        duration: 2000\n      });\n      dispatch(userLogIn(res.data.user));\n      history.push('/');\n    } else {\n      setIsLoading(false);\n      toast.error('Error', {\n        duration: 2000\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: 'top-center',\n      toastOptions: {\n        style: {\n          margin: '40px',\n          background: '#363636',\n          color: '#fff',\n          zIndex: 1\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'auth',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'auth__title',\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: 'auth__body',\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: 'text',\n          value: email,\n          setValue: setEmail,\n          placeholder: 'Введите email ...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: 'password',\n          value: password,\n          setValue: setPassword,\n          placeholder: 'Введите пароль ...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: '/forget',\n          children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOnSubmit,\n          className: 'auth__btn',\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"CR9XGs36YtE06zOBBNUsNMF0T0k=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/fabiozzz/www/react/y-champion/for-user/src/compponents/auth/Login.js"],"names":["React","useEffect","useState","Input","useDispatch","useHistory","api","userLogIn","toast","Toaster","NavLink","Login","history","dispatch","email","setEmail","password","setPassword","isLoading","setIsLoading","loading","remove","handleOnSubmit","e","preventDefault","res","login","data","user","success","duration","push","error","style","margin","background","color","zIndex"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Input} from \"../../utils/input/Input\";\nimport './auth.css';\nimport {useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router\";\nimport api from '../../exampleApi/APIJWT';\nimport {userLogIn} from \"../../actions/userActions\";\nimport {toast, Toaster} from \"react-hot-toast\";\nimport {NavLink} from \"react-router-dom\";\n\nexport const Login = () => {\n    const history = useHistory()\n    const dispatch = useDispatch();\n\n    //данные пользователя для входа в систему\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    //переключатель загрузки страницы\n    const [isLoading, setIsLoading] = useState(false);\n\n    //вызывается каждый раз при обновлении isLoading и смотрит показывать индикатор или нет\n    useEffect(()=>{\n        if (isLoading) {\n            toast.loading('loading')\n        }else{\n            toast.remove();\n        }\n    },[isLoading])\n\n    //прослушивает кнопку отправки формы,\n    //устанавливает и снимает индикатор загрузки,\n    // получает пользователя и диспатчит в редакс\n    const handleOnSubmit = async (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        const res = await api.login({email, password});\n        if (res.data.user) {\n            setIsLoading(false)\n            toast.success('Success',{duration:2000})\n            dispatch(userLogIn(res.data.user));\n            history.push('/');\n        }else{\n            setIsLoading(false)\n            toast.error('Error',{duration:2000})\n        }\n    };\n\n    return (\n        <>\n            <Toaster position={'top-center'} toastOptions={\n                {style: {\n                        margin: '40px',\n                        background: '#363636',\n                        color: '#fff',\n                        zIndex: 1,\n                    }\n                }\n            }/>\n            {!isLoading&&\n                <div className={'auth'}>\n                    <div className={'auth__title'}>Авторизация</div>\n                    <form className={'auth__body'}>\n                        <Input type={'text'} value={email} setValue={setEmail} placeholder={'Введите email ...'}/>\n                        <Input type={'password'} value={password} setValue={setPassword}\n                               placeholder={'Введите пароль ...'}/>\n                        <NavLink to={'/forget'}>Забыли пароль</NavLink>\n                        <button onClick={handleOnSubmit} className={'auth__btn'}>Войти</button>\n                    </form>\n                </div>\n            }\n        </>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// const user = {\n//     fullName:'Mr. FabiozZz Loucoster',\n//     birthDay: '20/10/1989',\n//     phone: '+79996569772',\n//     email: 'fabiozzz.dev@gmail.com',\n// }\n// const users=[\n//     {\n//         fullName:'Mr. FabiozZz Loucoster',\n//         birthDay: '20/10/1989',\n//         phone: '+79996569772',\n//         email: 'fabiozzz.dev@gmail.com',\n//     },\n//     {\n//         fullName:'Mr. FabiozZz Loucoster',\n//         birthDay: '20/10/1989',\n//         phone: '+79996569772',\n//         email: 'fabiozzz.dev@gmail.com',\n//     },\n//     {\n//         fullName:'Mr. FabiozZz Loucoster',\n//         birthDay: '20/10/1989',\n//         phone: '+79996569772',\n//         email: 'fabiozzz.dev@gmail.com',\n//     },\n//     {\n//         fullName:'Mr. FabiozZz Loucoster',\n//         birthDay: '20/10/1989',\n//         phone: '+79996569772',\n//         email: 'fabiozzz.dev@gmail.com',\n//     },\n// ]\n// mock.onPost('/auth/login').reply(200, {user,accessToken: 'TOKEN_ACC',refreshToken:'TOKEN_REF'});\n// mock.onPost('/auth/register').reply(200, {success: 'Ok'});\n//\n// mock.onPost('/auth/refresh').reply(200,{user,accessToken: 'TOKEN_ACC',refreshToken:'TOKEN_REs'});\n//\n// mock.onGet('/users').reply(200, {users});\n// mock.resetHistory();\nexport const login = async data => {\n  const res = await axios.post(\"/auth/login\", data);\n  console.log('вызван логин');\n  console.log('после логина получен токен', await res.data.accessToken);\n  localStorage.setItem('refresh_token', await res.data.refreshToken);\n  return res;\n};\nexport const logout = () => {\n  localStorage.removeItem('refresh_token');\n};\nexport const register = async data => {\n  return await axios.post('/auth/register', data);\n};\nexport const getUsers = async token => {\n  console.log(token);\n  return await axios.get(\"/users\", {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  }).then(data => data);\n};","map":{"version":3,"sources":["/home/fabiozzz/www/react/y-champion/for-user/src/actions/userActions.js"],"names":["login","data","res","axios","post","console","log","accessToken","localStorage","setItem","refreshToken","logout","removeItem","register","getUsers","token","get","headers","Authorization","then"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAO,MAAMA,KAAK,GAAG,MAAOC,IAAP,IAAe;AAChC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAN,CAAW,aAAX,EAA0BH,IAA1B,CAAlB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0C,MAAMJ,GAAG,CAACD,IAAJ,CAASM,WAAzD;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAqC,MAAMP,GAAG,CAACD,IAAJ,CAASS,YAApD;AACA,SAAOR,GAAP;AACH,CANM;AAQP,OAAO,MAAMS,MAAM,GAAE,MAAK;AACtBH,EAAAA,YAAY,CAACI,UAAb,CAAwB,eAAxB;AACH,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAG,MAAOZ,IAAP,IAAe;AACnC,SAAO,MAAME,KAAK,CAACC,IAAN,CAAW,gBAAX,EAA6BH,IAA7B,CAAb;AACH,CAFM;AAIP,OAAO,MAAMa,QAAQ,GAAG,MAAOC,KAAP,IAAgB;AACpCV,EAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAU,QAAV,EAAmB;AAACC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAE,YAAWH;AAA3B;AAAV,GAAnB,EAAiEI,IAAjE,CAAuElB,IAAD,IAAUA,IAAhF,CAAb;AACH,CAHM","sourcesContent":["\n// const user = {\n//     fullName:'Mr. FabiozZz Loucoster',\n//     birthDay: '20/10/1989',\n//     phone: '+79996569772',\n//     email: 'fabiozzz.dev@gmail.com',\n// }\n// const users=[\n//     {\n//         fullName:'Mr. FabiozZz Loucoster',\n//         birthDay: '20/10/1989',\n//         phone: '+79996569772',\n//         email: 'fabiozzz.dev@gmail.com',\n//     },\n//     {\n//         fullName:'Mr. FabiozZz Loucoster',\n//         birthDay: '20/10/1989',\n//         phone: '+79996569772',\n//         email: 'fabiozzz.dev@gmail.com',\n//     },\n//     {\n//         fullName:'Mr. FabiozZz Loucoster',\n//         birthDay: '20/10/1989',\n//         phone: '+79996569772',\n//         email: 'fabiozzz.dev@gmail.com',\n//     },\n//     {\n//         fullName:'Mr. FabiozZz Loucoster',\n//         birthDay: '20/10/1989',\n//         phone: '+79996569772',\n//         email: 'fabiozzz.dev@gmail.com',\n//     },\n// ]\n// mock.onPost('/auth/login').reply(200, {user,accessToken: 'TOKEN_ACC',refreshToken:'TOKEN_REF'});\n// mock.onPost('/auth/register').reply(200, {success: 'Ok'});\n//\n// mock.onPost('/auth/refresh').reply(200,{user,accessToken: 'TOKEN_ACC',refreshToken:'TOKEN_REs'});\n//\n// mock.onGet('/users').reply(200, {users});\n// mock.resetHistory();\n\n\nexport const login = async (data)=> {\n    const res = await axios.post(\"/auth/login\", data);\n    console.log('вызван логин');\n    console.log('после логина получен токен', await res.data.accessToken);\n    localStorage.setItem('refresh_token',await res.data.refreshToken)\n    return res\n}\n\nexport const logout =()=> {\n    localStorage.removeItem('refresh_token')\n}\n\nexport const register = async (data)=> {\n    return await axios.post('/auth/register', data)\n}\n\nexport const getUsers = async (token)=> {\n    console.log(token)\n    return await axios.get(\"/users\",{headers: {Authorization: 'Bearer '+ token}}).then((data) => data)\n}"]},"metadata":{},"sourceType":"module"}